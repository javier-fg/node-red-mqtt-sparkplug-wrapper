{
 "mqtt-sparkplug-plus": {
        "label": {
            "name" : "Name",
            "username": "Username",
            "topic": "Topic",
            "password": "Password",
            "device": "sp EoND",
            "storeforward": "Enable Store Forward",
            "aliasMetrics" :  "Use Alias for Metrics",
            "compressoutput" : "Compress Body",
            "messagetype": "Msg. Type",
            "eon" : "sp EoN",
            "eond" : "sp EoND",
            "group" : "sp Group",
            "allgroups": "All Groups",
            "allnodes": "All Nodes",
            "allmessagetypes": "All Message Types", 
            "alldevices": "All Devices",
            "server": "Server",
            "broker": "sp Broker",
            "example": "e.g. localhost",
            "output": "Output",
            "qos": "QoS",
            "retain": "Retain",
            "clientid": "Client ID",
            "port": "Port",
            "keepalive": "Keep Alive",
            "cleansession": "Use clean session",
            "cleanstart": "Use clean start",
            "use-tls": "Use TLS",
            "tls-config":"TLS Configuration",
            "verify-server-cert":"Verify server certificate",
            "compatmode": "Use legacy MQTT 3.1 support",
            "userProperties": "User Properties",
            "subscriptionIdentifier": "Subscription ID",
            "flags": "Flags",
            "protocolVersion": "Protocol",
            "protocolVersion4": "MQTT V3.1.1",
            "topicAliasMaximum": "Alias Max",
            "maximumPacketSize": "Max Packet Size",
            "receiveMaximum": "Receive Max",
            "session": "Session",
            "delay": "Delay",
            "birthImmediately" : "Send Birth Immediately"
        },
        "tip": {
            "storeforward" : "all the buffered values will be kept in memory. Do not use this for high thoughput applications.",
            "device": "Tip: Use '/' to group related metrics e.g. Machine1/Speed",
            "sparkplugformat": "Topic format: namespace/group_id/message_type/edge_node_id/[device_id]",
            "birthImmediately" : "The Send Birth Immediately option will send device online (DBIRTH) with NULL values as soon as node-red starts up."
        },
        "sections-label":{
            "birth-message": "Message sent on connection (birth message)",
            "will-message":"Message sent on an unexpected disconnection (will message)",
            "close-message":"Message sent before disconnecting (close message)"
        },
        "tabs-label": {
            "connection": "MQTT Broker",
            "security": "MQTT Security",
            "sparkplug": "Sparkplug",
            "advanced" : "Advanced",
            "metrics" : " Metrics"
        },
        "placeholder": {
            "clientid": "Leave blank for auto generated",
            "clientid-nonclean":"Must be set for non-clean sessions",
            "eondname":"Sparplug Device Name (EoND)",
            "eonname":"Sparplug Edge Name (EoN) ",
            "groupname":"Sparplug Group Name",
            "name": "Sparkplug Device",
            "command": "NDATA"
        },
        "state": {
            "connected": "Connected to broker: __broker__",
            "disconnected": "Disconnected from broker: __broker__",
            "connect-failed": "Connection failed to broker: __broker__"
        },
        "retain": "Retain",
        "output": {
            "buffer": "a Buffer",
            "string": "a String",
            "base64": "a Base64 encoded string",
            "auto": "auto-detect (string or buffer)",
            "json": "a parsed JSON object"
        },
        "true": "true",
        "false": "false",
        "errors": {
            "buffer-full": "the buffer is full. Older data will be lost",
            "missing-config": "missing broker configuration",
            "missing-attribute-name": "All metrics must have a name",
            "nonclean-missingclientid": "No client ID set, using clean session",
            "invalid-topic": "The Topic is invalid",
            "device-unknown-metric": "The metric '__name__' is not recognized by the device",
            "device-no-metrics": "Metrics should be an Array",
            "payload-type-object": "Payload must be of type object",
            "unable-to-decode-message": "Unable to decode __type__ message. the error is : __error__",
            "unable-to-encode-message": "Unable to encode __type__ message. the error is : __error__",
            "not-defined": "Topic is not defined",
            "invalid-metric-definition": "Unable to use '__name__' as a metric. the error is : __error__"
        }
    }	
}
